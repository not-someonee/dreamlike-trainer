from typing import List

RESOLUTIONS_2048 = [
  [2048, 2048],
  [2112, 1984], [1984, 2112],
  [2176, 1920], [1920, 2176],
  [2240, 1856], [1856, 2240],
  [2304, 1792], [1792, 2304],
  [2368, 1728], [1728, 2368],
  [2432, 1664], [1664, 2432],
  [2496, 1600], [1600, 2496],
  [2560, 1536], [1536, 2560],
  [2624, 1472], [1472, 2624]
]

RESOLUTIONS_1984 = [
  [1984, 1984],
  [2048, 1920], [1920, 2048],
  [2112, 1856], [1856, 2112],
  [2176, 1792], [1792, 2176],
  [2240, 1728], [1728, 2240],
  [2304, 1664], [1664, 2304],
  [2368, 1600], [1600, 2368],
  [2432, 1536], [1536, 2432],
  [2496, 1472], [1472, 2496],
  [2560, 1408], [1408, 2560]
]

RESOLUTIONS_1920 = [
  [1920, 1920],
  [1984, 1856], [1856, 1984],
  [2048, 1792], [1792, 2048],
  [2112, 1728], [1728, 2112],
  [2176, 1664], [1664, 2176],
  [2240, 1600], [1600, 2240],
  [2304, 1536], [1536, 2304],
  [2368, 1472], [1472, 2368],
  [2432, 1408], [1408, 2432],
  [2496, 1344], [1344, 2496]
]

RESOLUTIONS_1856 = [
  [1856, 1856],
  [1920, 1792], [1792, 1920],
  [1984, 1728], [1728, 1984],
  [2048, 1664], [1664, 2048],
  [2112, 1600], [1600, 2112],
  [2176, 1536], [1536, 2176],
  [2240, 1472], [1472, 2240],
  [2304, 1408], [1408, 2304],
  [2368, 1344], [1344, 2368],
  [2432, 1280], [1280, 2432]
]

RESOLUTIONS_1792 = [
  [1792, 1792],
  [1856, 1728], [1728, 1856],
  [1920, 1664], [1664, 1920],
  [1984, 1600], [1600, 1984],
  [2048, 1536], [1536, 2048],
  [2112, 1472], [1472, 2112],
  [2176, 1408], [1408, 2176],
  [2240, 1344], [1344, 2240],
  [2304, 1280], [1280, 2304],
  [2368, 1216], [1216, 2368]
]

RESOLUTIONS_1728 = [
  [1728, 1728],
  [1792, 1664], [1664, 1792],
  [1856, 1600], [1600, 1856],
  [1920, 1536], [1536, 1920],
  [1984, 1472], [1472, 1984],
  [2048, 1408], [1408, 2048],
  [2112, 1344], [1344, 2112],
  [2176, 1280], [1280, 2176],
  [2240, 1216], [1216, 2240],
  [2304, 1152], [1152, 2304]
]

RESOLUTIONS_1664 = [
  [1664, 1664],
  [1728, 1600], [1600, 1728],
  [1792, 1536], [1536, 1792],
  [1856, 1472], [1472, 1856],
  [1920, 1408], [1408, 1920],
  [1984, 1344], [1344, 1984],
  [2048, 1280], [1280, 2048],
  [2112, 1216], [1216, 2112],
  [2176, 1152], [1152, 2176],
  [2240, 1088], [1088, 2240]
]

RESOLUTIONS_1600 = [
  [1600, 1600],
  [1664, 1536], [1536, 1664],
  [1728, 1472], [1472, 1728],
  [1792, 1408], [1408, 1792],
  [1856, 1344], [1344, 1856],
  [1920, 1280], [1280, 1920],
  [1984, 1216], [1216, 1984],
  [2048, 1152], [1152, 2048],
  [2112, 1088], [1088, 2112],
  [2176, 1024], [1024, 2176]
]

RESOLUTIONS_1536 = [
  [1536, 1536],
  [1600, 1472], [1472, 1600],
  [1664, 1408], [1408, 1664],
  [1728, 1344], [1344, 1728],
  [1792, 1280], [1280, 1792],
  [1856, 1216], [1216, 1856],
  [1920, 1152], [1152, 1920],
  [1984, 1088], [1088, 1984],
  [2048, 1024], [1024, 2048],
  [2112, 960], [960, 2112]
]

RESOLUTIONS_1472 = [
  [1472, 1472],
  [1536, 1408], [1408, 1536],
  [1600, 1344], [1344, 1600],
  [1664, 1280], [1280, 1664],
  [1728, 1216], [1216, 1728],
  [1792, 1152], [1152, 1792],
  [1856, 1088], [1088, 1856],
  [1920, 1024], [1024, 1920],
  [1984, 960], [960, 1984],
  [2048, 896], [896, 2048]
]

RESOLUTIONS_1408 = [
  [1408, 1408],
  [1472, 1344], [1344, 1472],
  [1536, 1280], [1280, 1536],
  [1600, 1216], [1216, 1600],
  [1664, 1152], [1152, 1664],
  [1728, 1088], [1088, 1728],
  [1792, 1024], [1024, 1792],
  [1856, 960], [960, 1856],
  [1920, 896], [896, 1920],
  [1984, 832], [832, 1984]
]

RESOLUTIONS_1344 = [
  [1344, 1344],
  [1408, 1280], [1280, 1408],
  [1472, 1216], [1216, 1472],
  [1536, 1152], [1152, 1536],
  [1600, 1088], [1088, 1600],
  [1664, 1024], [1024, 1664],
  [1728, 960], [960, 1728],
  [1792, 896], [896, 1792],
  [1856, 832], [832, 1856],
  [1920, 768], [768, 1920]
]

RESOLUTIONS_1280 = [
  [1280, 1280],
  [1344, 1216], [1216, 1344],
  [1408, 1152], [1152, 1408],
  [1472, 1088], [1088, 1472],
  [1536, 1024], [1024, 1536],
  [1600, 960], [960, 1600],
  [1664, 896], [896, 1664],
  [1728, 832], [832, 1728],
  [1792, 768], [768, 1792],
  [1856, 704], [704, 1856]
]

RESOLUTIONS_1216 = [
  [1216, 1216],
  [1280, 1152], [1152, 1280],
  [1344, 1088], [1088, 1344],
  [1408, 1024], [1024, 1408],
  [1472, 960], [960, 1472],
  [1536, 896], [896, 1536],
  [1600, 832], [832, 1600],
  [1664, 768], [768, 1664],
  [1728, 704], [704, 1728],
  [1792, 640], [640, 1792]
]

RESOLUTIONS_1152 = [
  [1152, 1152],
  [1216, 1088], [1088, 1216],
  [1280, 1024], [1024, 1280],
  [1344, 960], [960, 1344],
  [1408, 896], [896, 1408],
  [1472, 832], [832, 1472],
  [1536, 768], [768, 1536],
  [1600, 704], [704, 1600],
  [1664, 640], [640, 1664],
  [1728, 576], [576, 1728]
]

RESOLUTIONS_1088 = [
  [1088, 1088],
  [1152, 1024], [1024, 1152],
  [1216, 960], [960, 1216],
  [1280, 896], [896, 1280],
  [1344, 832], [832, 1344],
  [1408, 768], [768, 1408],
  [1472, 704], [704, 1472],
  [1536, 640], [640, 1536],
  [1600, 576], [576, 1600],
  [1664, 512], [512, 1664]
]

RESOLUTIONS_832 = [
  [832, 832],
  [896, 768], [768, 896],
  [960, 704], [704, 960],
  [1024, 640], [640, 1024],
  [1152, 576], [576, 1152],
  [1280, 512], [512, 1280],
  [1344, 512], [512, 1344],
  [1408, 448], [448, 1408],
  [1472, 448], [448, 1472],
  [1536, 384], [384, 1536],
  [1600, 384], [384, 1600]
]

RESOLUTIONS_896 = [
  [896, 896],

  [960, 832], [832, 960],
  [1024, 768], [768, 1024],
  [1088, 704], [704, 1088],
  [1152, 704], [704, 1152],
  [1216, 640], [640, 1216],
  [1280, 640], [640, 1280],
  [1344, 576], [576, 1344],
  [1408, 576], [576, 1408],
  [1472, 512], [512, 1472],
  [1536, 512], [512, 1536],
  [1600, 448], [448, 1600],
  [1664, 448], [448, 1664]
]

RESOLUTIONS_960 = [
  [960, 960],
  [1024, 896], [896, 1024],
  [1088, 832], [832, 1088],
  [1152, 768], [768, 1152],
  [1216, 704], [704, 1216],
  [1280, 640], [640, 1280],
  [1344, 576], [576, 1344],
  [1408, 512], [512, 1408],
  [1472, 448], [448, 1472],
  [1536, 384], [384, 1536]
]

RESOLUTIONS_1024 = [
  [1024, 1024],
  [1088, 960], [960, 1088],
  [1152, 896], [896, 1152],
  [1216, 832], [832, 1216],
  [1344, 768], [768, 1344],
  [1472, 704], [704, 1472],
  [1600, 640], [640, 1600],
  [1728, 576], [576, 1728],
  [1792, 576], [576, 1792]
]

RESOLUTIONS_768 = [
  [768, 768],
  [896, 640], [640, 896],
  [832, 704], [704, 832],
  [960, 576], [576, 960],
  [1024, 576], [576, 1024],
  [1088, 512], [512, 1088],
  [1152, 512], [512, 1152],
  [1216, 448], [448, 1216],
  [1280, 448], [448, 1280],
  [1344, 384], [384, 1344],
  [1408, 384], [384, 1408],
  [1472, 320], [320, 1472],
  [1536, 320], [320, 1536],
]

RESOLUTIONS_704 = [
  [704, 704],
  [768, 640], [640, 768],
  [832, 576], [576, 832],
  [896, 512], [512, 896],
  [960, 512], [512, 960],
  [1024, 448], [448, 1024],
  [1088, 448], [448, 1088],
  [1152, 384], [384, 1152],
  [1216, 384], [384, 1216],
  [1280, 384], [384, 1280],
  [1280, 320], [320, 1280],
  [1408, 320], [320, 1408],
  [1536, 320], [320, 1536],
]

RESOLUTIONS_640 = [
  [640, 640],
  [704, 576], [576, 704],
  [768, 512], [512, 768],
  [896, 448], [448, 896],
  [1024, 384], [384, 1024],
  [1280, 320], [320, 1280],
  [1408, 256], [256, 1408],
  [1472, 256], [256, 1472],
  [1536, 256], [256, 1536],
  [1600, 256], [256, 1600],
]

RESOLUTIONS_576 = [
  [576, 576],
  [640, 512], [512, 640],
  [640, 448], [448, 640],
  [704, 448], [448, 704],
  [832, 384], [384, 832],
  [1024, 320], [320, 1024],
  [1280, 256], [256, 1280],
]

RESOLUTIONS_512 = [
  [512, 512],
  [576, 448], [448, 576],
  [640, 384], [384, 640],
  [768, 320], [320, 768],
  [832, 256], [256, 832],
  [896, 256], [256, 896],
  [960, 256], [256, 960],
  [1024, 256], [256, 1024],
]

ALL_RESOLUTIONS = [
  RESOLUTIONS_512, RESOLUTIONS_576, RESOLUTIONS_640, RESOLUTIONS_704, RESOLUTIONS_768, RESOLUTIONS_832, RESOLUTIONS_896,
  RESOLUTIONS_960, RESOLUTIONS_1024, RESOLUTIONS_1088, RESOLUTIONS_1152, RESOLUTIONS_1216, RESOLUTIONS_1280, RESOLUTIONS_1344,
  RESOLUTIONS_1408, RESOLUTIONS_1472, RESOLUTIONS_1536, RESOLUTIONS_1600, RESOLUTIONS_1664, RESOLUTIONS_1728, RESOLUTIONS_1792,
  RESOLUTIONS_1856, RESOLUTIONS_1920, RESOLUTIONS_1984, RESOLUTIONS_2048
]

# Given a resolution, return a list of resolutions with ~ the same amount of pixels
def get_closest_bucket_resolutions(resolution: int):
  if resolution < 512 or resolution > 2048:
    raise ValueError('Resolution must be >= 512 & <= 2048')
  if resolution % 64 != 0:
    raise ValueError('Resolution must be divisible by 64')
  return ALL_RESOLUTIONS[int((resolution - 512) / 64)]

# Given a list of resolutions, width & height, find a resolution in the list that has the closest aspect ratio to the given aspect ratio (width/height)
def find_closest_resolution(resolutions: List[List[int]], width: int, height: int):
  aspect_ratio = width / height
  return min(resolutions, key=lambda res: abs(res[0] / res[1] - aspect_ratio))
